{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ConnectionDiagnostic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, RefreshCw, AlertTriangle, Wifi, Database, Users, Globe } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectionDiagnostic = ({\n  API_BASE\n}) => {\n  _s();\n  const [tests, setTests] = useState({\n    backend: {\n      status: 'pending',\n      message: '',\n      details: null\n    },\n    database: {\n      status: 'pending',\n      message: '',\n      details: null\n    },\n    facebook: {\n      status: 'pending',\n      message: '',\n      details: null\n    },\n    internet: {\n      status: 'pending',\n      message: '',\n      details: null\n    }\n  });\n  const [testing, setTesting] = useState(false);\n  const runTest = async (testName, testFunction) => {\n    setTests(prev => ({\n      ...prev,\n      [testName]: {\n        status: 'running',\n        message: 'Test en cours...',\n        details: null\n      }\n    }));\n    try {\n      const result = await testFunction();\n      setTests(prev => ({\n        ...prev,\n        [testName]: {\n          status: 'success',\n          message: result.message,\n          details: result.details\n        }\n      }));\n    } catch (error) {\n      setTests(prev => ({\n        ...prev,\n        [testName]: {\n          status: 'error',\n          message: error.message,\n          details: error.details || null\n        }\n      }));\n    }\n  };\n  const testBackendConnection = async () => {\n    var _data$database, _data$database2;\n    const response = await fetch(`${API_BASE}/api/health`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Backend inaccessible: HTTP ${response.status}`);\n    }\n    const data = await response.json();\n    return {\n      message: `Backend connecté - ${data.status}`,\n      details: {\n        timestamp: data.timestamp,\n        database_users: ((_data$database = data.database) === null || _data$database === void 0 ? void 0 : _data$database.users_count) || 0,\n        database_posts: ((_data$database2 = data.database) === null || _data$database2 === void 0 ? void 0 : _data$database2.posts_count) || 0\n      }\n    };\n  };\n  const testDatabaseConnection = async () => {\n    const response = await fetch(`${API_BASE}/api/health`);\n    const data = await response.json();\n    if (data.mongodb !== 'connected') {\n      throw new Error(`Base de données déconnectée: ${data.mongodb}`);\n    }\n    return {\n      message: `MongoDB connectée - ${data.database.users_count} utilisateurs, ${data.database.posts_count} posts`,\n      details: data.database\n    };\n  };\n  const testFacebookConnection = async () => {\n    try {\n      var _data$error;\n      const response = await fetch('https://graph.facebook.com/v18.0/me?access_token=test&fields=id');\n      const data = await response.json();\n      if (data.error && data.error.code === 190) {\n        return {\n          message: 'API Facebook accessible (token requis pour authentification)',\n          details: {\n            api_accessible: true,\n            requires_auth: true\n          }\n        };\n      }\n      throw new Error(`Erreur API Facebook: ${((_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message) || 'Réponse inattendue'}`);\n    } catch (networkError) {\n      if (networkError.message.includes('Failed to fetch')) {\n        throw new Error('Impossible d\\'accéder à l\\'API Facebook - problème réseau');\n      }\n      throw networkError;\n    }\n  };\n  const testInternetConnection = async () => {\n    const response = await fetch('https://www.google.com/favicon.ico', {\n      method: 'HEAD',\n      mode: 'no-cors'\n    });\n    return {\n      message: 'Connexion Internet active',\n      details: {\n        internet_available: true\n      }\n    };\n  };\n  const runAllTests = async () => {\n    setTesting(true);\n    await runTest('backend', testBackendConnection);\n    await runTest('database', testDatabaseConnection);\n    await runTest('facebook', testFacebookConnection);\n    await runTest('internet', testInternetConnection);\n    setTesting(false);\n  };\n  useEffect(() => {\n    runAllTests();\n  }, [API_BASE]);\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 30\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 28\n        }, this);\n      case 'running':\n        return /*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 30\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"w-5 h-5 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'success':\n        return 'border-green-200 bg-green-50';\n      case 'error':\n        return 'border-red-200 bg-red-50';\n      case 'running':\n        return 'border-blue-200 bg-blue-50';\n      default:\n        return 'border-gray-200 bg-gray-50';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: \"Diagnostic de Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runAllTests,\n        disabled: testing,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: `w-4 h-4 ${testing ? 'animate-spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Relancer les Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg border ${getStatusColor(tests.backend.status)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Wifi, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), getStatusIcon(tests.backend.status), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium\",\n              children: \"Connexion Backend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: tests.backend.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), tests.backend.details && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"API URL: \", API_BASE, \"/api/health\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg border ${getStatusColor(tests.database.status)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Database, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), getStatusIcon(tests.database.status), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium\",\n              children: \"Base de Donn\\xE9es MongoDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: tests.database.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), tests.database.details && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"Utilisateurs: \", tests.database.details.users_count, \" | Posts: \", tests.database.details.posts_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg border ${getStatusColor(tests.facebook.status)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), getStatusIcon(tests.facebook.status), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium\",\n              children: \"API Facebook/Meta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: tests.facebook.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: \"Graph API v18.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 rounded-lg border ${getStatusColor(tests.internet.status)}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(Globe, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), getStatusIcon(tests.internet.status), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium\",\n              children: \"Connexion Internet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: tests.internet.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-4 rounded-lg border ${Object.values(tests).every(test => test.status === 'success') ? 'border-green-200 bg-green-50' : Object.values(tests).some(test => test.status === 'error') ? 'border-red-200 bg-red-50' : 'border-yellow-200 bg-yellow-50'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: Object.values(tests).every(test => test.status === 'success') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-5 h-5 text-green-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-green-800\",\n            children: \"\\u2705 Toutes les connexions sont op\\xE9rationnelles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : Object.values(tests).some(test => test.status === 'error') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(XCircle, {\n            className: \"w-5 h-5 text-red-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-red-800\",\n            children: \"\\u274C Des probl\\xE8mes de connexion ont \\xE9t\\xE9 d\\xE9tect\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-5 h-5 text-yellow-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-yellow-800\",\n            children: \"\\u23F3 Tests en cours...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionDiagnostic, \"FWbdZNCi/WEeYEtbapiPrcK5kGY=\");\n_c = ConnectionDiagnostic;\nexport default ConnectionDiagnostic;\nvar _c;\n$RefreshReg$(_c, \"ConnectionDiagnostic\");","map":{"version":3,"names":["React","useState","useEffect","CheckCircle","XCircle","RefreshCw","AlertTriangle","Wifi","Database","Users","Globe","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectionDiagnostic","API_BASE","_s","tests","setTests","backend","status","message","details","database","facebook","internet","testing","setTesting","runTest","testName","testFunction","prev","result","error","testBackendConnection","_data$database","_data$database2","response","fetch","method","headers","ok","Error","data","json","timestamp","database_users","users_count","database_posts","posts_count","testDatabaseConnection","mongodb","testFacebookConnection","_data$error","code","api_accessible","requires_auth","networkError","includes","testInternetConnection","mode","internet_available","runAllTests","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","children","onClick","disabled","Object","values","every","test","some","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/ConnectionDiagnostic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, RefreshCw, AlertTriangle, Wifi, Database, Users, Globe } from 'lucide-react';\n\nconst ConnectionDiagnostic = ({ API_BASE }) => {\n  const [tests, setTests] = useState({\n    backend: { status: 'pending', message: '', details: null },\n    database: { status: 'pending', message: '', details: null },\n    facebook: { status: 'pending', message: '', details: null },\n    internet: { status: 'pending', message: '', details: null }\n  });\n  const [testing, setTesting] = useState(false);\n\n  const runTest = async (testName, testFunction) => {\n    setTests(prev => ({\n      ...prev,\n      [testName]: { status: 'running', message: 'Test en cours...', details: null }\n    }));\n\n    try {\n      const result = await testFunction();\n      setTests(prev => ({\n        ...prev,\n        [testName]: { status: 'success', message: result.message, details: result.details }\n      }));\n    } catch (error) {\n      setTests(prev => ({\n        ...prev,\n        [testName]: { status: 'error', message: error.message, details: error.details || null }\n      }));\n    }\n  };\n\n  const testBackendConnection = async () => {\n    const response = await fetch(`${API_BASE}/api/health`, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Backend inaccessible: HTTP ${response.status}`);\n    }\n\n    const data = await response.json();\n    return {\n      message: `Backend connecté - ${data.status}`,\n      details: {\n        timestamp: data.timestamp,\n        database_users: data.database?.users_count || 0,\n        database_posts: data.database?.posts_count || 0\n      }\n    };\n  };\n\n  const testDatabaseConnection = async () => {\n    const response = await fetch(`${API_BASE}/api/health`);\n    const data = await response.json();\n    \n    if (data.mongodb !== 'connected') {\n      throw new Error(`Base de données déconnectée: ${data.mongodb}`);\n    }\n\n    return {\n      message: `MongoDB connectée - ${data.database.users_count} utilisateurs, ${data.database.posts_count} posts`,\n      details: data.database\n    };\n  };\n\n  const testFacebookConnection = async () => {\n    try {\n      const response = await fetch('https://graph.facebook.com/v18.0/me?access_token=test&fields=id');\n      const data = await response.json();\n      \n      if (data.error && data.error.code === 190) {\n        return {\n          message: 'API Facebook accessible (token requis pour authentification)',\n          details: { api_accessible: true, requires_auth: true }\n        };\n      }\n      \n      throw new Error(`Erreur API Facebook: ${data.error?.message || 'Réponse inattendue'}`);\n    } catch (networkError) {\n      if (networkError.message.includes('Failed to fetch')) {\n        throw new Error('Impossible d\\'accéder à l\\'API Facebook - problème réseau');\n      }\n      throw networkError;\n    }\n  };\n\n  const testInternetConnection = async () => {\n    const response = await fetch('https://www.google.com/favicon.ico', { \n      method: 'HEAD',\n      mode: 'no-cors'\n    });\n    \n    return {\n      message: 'Connexion Internet active',\n      details: { internet_available: true }\n    };\n  };\n\n  const runAllTests = async () => {\n    setTesting(true);\n    \n    await runTest('backend', testBackendConnection);\n    await runTest('database', testDatabaseConnection);  \n    await runTest('facebook', testFacebookConnection);\n    await runTest('internet', testInternetConnection);\n    \n    setTesting(false);\n  };\n\n  useEffect(() => {\n    runAllTests();\n  }, [API_BASE]);\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'success': return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'error': return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'running': return <RefreshCw className=\"w-5 h-5 text-blue-500 animate-spin\" />;\n      default: return <AlertTriangle className=\"w-5 h-5 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'success': return 'border-green-200 bg-green-50';\n      case 'error': return 'border-red-200 bg-red-50';\n      case 'running': return 'border-blue-200 bg-blue-50';\n      default: return 'border-gray-200 bg-gray-50';\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">Diagnostic de Connexion</h3>\n        <button\n          onClick={runAllTests}\n          disabled={testing}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 flex items-center space-x-2\"\n        >\n          <RefreshCw className={`w-4 h-4 ${testing ? 'animate-spin' : ''}`} />\n          <span>Relancer les Tests</span>\n        </button>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {/* Backend Test */}\n        <div className={`p-4 rounded-lg border ${getStatusColor(tests.backend.status)}`}>\n          <div className=\"flex items-center space-x-3\">\n            <Wifi className=\"w-5 h-5 text-gray-600\" />\n            {getStatusIcon(tests.backend.status)}\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">Connexion Backend</h4>\n              <p className=\"text-sm text-gray-600\">{tests.backend.message}</p>\n              {tests.backend.details && (\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  API URL: {API_BASE}/api/health\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Database Test */}\n        <div className={`p-4 rounded-lg border ${getStatusColor(tests.database.status)}`}>\n          <div className=\"flex items-center space-x-3\">\n            <Database className=\"w-5 h-5 text-gray-600\" />\n            {getStatusIcon(tests.database.status)}\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">Base de Données MongoDB</h4>\n              <p className=\"text-sm text-gray-600\">{tests.database.message}</p>\n              {tests.database.details && (\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Utilisateurs: {tests.database.details.users_count} | Posts: {tests.database.details.posts_count}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Facebook API Test */}\n        <div className={`p-4 rounded-lg border ${getStatusColor(tests.facebook.status)}`}>\n          <div className=\"flex items-center space-x-3\">\n            <Users className=\"w-5 h-5 text-gray-600\" />\n            {getStatusIcon(tests.facebook.status)}\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">API Facebook/Meta</h4>\n              <p className=\"text-sm text-gray-600\">{tests.facebook.message}</p>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                Graph API v18.0\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Internet Test */}\n        <div className={`p-4 rounded-lg border ${getStatusColor(tests.internet.status)}`}>\n          <div className=\"flex items-center space-x-3\">\n            <Globe className=\"w-5 h-5 text-gray-600\" />\n            {getStatusIcon(tests.internet.status)}\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium\">Connexion Internet</h4>\n              <p className=\"text-sm text-gray-600\">{tests.internet.message}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Overall Status */}\n      <div className={`p-4 rounded-lg border ${\n        Object.values(tests).every(test => test.status === 'success')\n          ? 'border-green-200 bg-green-50'\n          : Object.values(tests).some(test => test.status === 'error')\n          ? 'border-red-200 bg-red-50'\n          : 'border-yellow-200 bg-yellow-50'\n      }`}>\n        <div className=\"flex items-center space-x-2\">\n          {Object.values(tests).every(test => test.status === 'success') ? (\n            <>\n              <CheckCircle className=\"w-5 h-5 text-green-500\" />\n              <span className=\"font-medium text-green-800\">✅ Toutes les connexions sont opérationnelles</span>\n            </>\n          ) : Object.values(tests).some(test => test.status === 'error') ? (\n            <>\n              <XCircle className=\"w-5 h-5 text-red-500\" />\n              <span className=\"font-medium text-red-800\">❌ Des problèmes de connexion ont été détectés</span>\n            </>\n          ) : (\n            <>\n              <RefreshCw className=\"w-5 h-5 text-yellow-500\" />\n              <span className=\"font-medium text-yellow-800\">⏳ Tests en cours...</span>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionDiagnostic;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}