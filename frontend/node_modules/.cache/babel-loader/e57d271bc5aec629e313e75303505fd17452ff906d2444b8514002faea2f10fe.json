{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ConnectionStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = ({\n  API_BASE\n}) => {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [error, setError] = useState('');\n  const checkConnection = async () => {\n    try {\n      setStatus('checking');\n      setError('');\n      const response = await fetch(`${API_BASE}/api/health`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Backend health check:', data);\n        setStatus('connected');\n      } else {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n    } catch (err) {\n      console.error('Connection check failed:', err);\n      setStatus('disconnected');\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    checkConnection();\n  }, [API_BASE]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 p-3 rounded-lg border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [status === 'checking' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-4 h-4 animate-spin text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-blue-600\",\n            children: \"V\\xE9rification de la connexion...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), status === 'connected' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-4 h-4 text-green-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-green-600\",\n            children: \"Connect\\xE9 au serveur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), status === 'disconnected' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(XCircle, {\n            className: \"w-4 h-4 text-red-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-red-600\",\n            children: \"Connexion \\xE9chou\\xE9e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkConnection,\n        className: \"text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 rounded transition-colors\",\n        children: \"Tester\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Erreur:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-gray-500\",\n      children: [\"Endpoint: \", API_BASE || 'API via proxy', \"/api/health\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionStatus, \"qYcYsqeavLTEndEjYeu2lYgznSQ=\");\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","CheckCircle","XCircle","RefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectionStatus","API_BASE","_s","status","setStatus","error","setError","checkConnection","response","fetch","method","headers","ok","data","json","console","log","Error","statusText","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/ConnectionStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CheckCircle, XCircle, RefreshCw } from 'lucide-react';\n\nconst ConnectionStatus = ({ API_BASE }) => {\n  const [status, setStatus] = useState('checking');\n  const [error, setError] = useState('');\n\n  const checkConnection = async () => {\n    try {\n      setStatus('checking');\n      setError('');\n      \n      const response = await fetch(`${API_BASE}/api/health`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Backend health check:', data);\n        setStatus('connected');\n      } else {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n    } catch (err) {\n      console.error('Connection check failed:', err);\n      setStatus('disconnected');\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkConnection();\n  }, [API_BASE]);\n\n  return (\n    <div className=\"mb-4 p-3 rounded-lg border\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          {status === 'checking' && (\n            <>\n              <RefreshCw className=\"w-4 h-4 animate-spin text-blue-500\" />\n              <span className=\"text-sm text-blue-600\">Vérification de la connexion...</span>\n            </>\n          )}\n          {status === 'connected' && (\n            <>\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n              <span className=\"text-sm text-green-600\">Connecté au serveur</span>\n            </>\n          )}\n          {status === 'disconnected' && (\n            <>\n              <XCircle className=\"w-4 h-4 text-red-500\" />\n              <span className=\"text-sm text-red-600\">Connexion échouée</span>\n            </>\n          )}\n        </div>\n        \n        <button\n          onClick={checkConnection}\n          className=\"text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 rounded transition-colors\"\n        >\n          Tester\n        </button>\n      </div>\n      \n      {error && (\n        <div className=\"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded\">\n          <strong>Erreur:</strong> {error}\n        </div>\n      )}\n      \n      <div className=\"mt-2 text-xs text-gray-500\">\n        Endpoint: {API_BASE || 'API via proxy'}/api/health\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}